# Support for AppVeyor CI -- https://www.appveyor.com/
# Copyright (C) Markus Franz Xaver Johannes Oberhumer

os: Visual Studio 2015

environment:
  global: { TRAVIS_OS_NAME: windows, CROSS: "", C: "", B: debug, T: "", X: "" }
  matrix:
    - { C: msvc-14.0-x86, CL_VERSION: 19.00, VS_VERSION: 2015 }
    - { C: msvc-14.0-x64, CL_VERSION: 19.00, VS_VERSION: 2015 }
    - { C: msvc-15.0-x86, CL_VERSION: 19.10, VS_VERSION: 2017, APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017 }
    - { C: msvc-15.0-x64, CL_VERSION: 19.10, VS_VERSION: 2017, APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017 }
#   - { C: gcc-4.9-m32, T: SKIP }
#   - { C: gcc-4.9-m64, T: SKIP }
  UPX_AUTOMATIC_BUILDS_SSL_KEY:
    secure: PZMpVeqnEYe39kK+Zu2/fnmZ6/HG6Lvls0hh9GMVU9vCWsr8xaU7kIbHBS01puUkb4bEWPILKYvSEDuhOhguDjd/P4QdXWipvV/F2GaVax0=
  UPX_AUTOMATIC_BUILDS_SSL_IV:
    secure: ZshjJ/78dbY60mVJjZJv9Si7rHY9VQb1tfQvFd4lqvY=

init:
  - git config --global core.autocrlf input
  - where bash & where cat & where chmod & where cmp & where cp & where curl & where date & where file & where git & where gzip & where mkdir & where mv & where openssl & where readlink & where rm & where rmdir & where sed & where sha256sum & where sort & where ssh & where ssh-add & where ssh-agent & where ssh-keyscan & where tar
# - bash --version & git --version & sed --version & tar --version
  - git --version & bash --version
# - dir "c:\Program Files\Git\usr\bin"
# - dir "c:\cygwin\bin"
# - dir "c:\mingw\bin"
# - dir "c:\mingw-w64\i686-5.3.0-posix-dwarf-rt_v4-rev0\mingw32\bin"

install:
  - cd c:\projects
  - md build build\%C% deps
  - cd c:\projects\upx
  - git submodule update --init --recursive
  - cd c:\projects\deps
  - curl -q -L --retry 5 -o ucl-1.03.tar.gz   "https://github.com/upx/upx/releases/download/v3.00/ucl-1.03.tar.gz"
  - curl -q -L --retry 5 -o zlib-1.2.8.tar.gz "https://github.com/upx/upx/releases/download/v3.00/zlib-1.2.8.tar.gz"
  - git clone https://github.com/upx/upx-testsuite
  - tar -xzf ucl-1.03.tar.gz
  - tar -xzf zlib-1.2.8.tar.gz
  # patch UCL for msvc-14.0 (vsnprintf issue)
  - sed -i '/# *define.*snprintf  *_v*snprintf$/d' ucl-1.03/acc/acc_auto.h
##- curl -q -L --retry 5 -o config.guess "http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD"
##- curl -q -L --retry 5 -o config.sub   "http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD"
##- cp config.guess config.sub ucl-1.03/acconfig/
  # setup compiler
  - if "%C%"=="msvc-10.0-x86" ( call "c:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" x86 )
  - if "%C%"=="msvc-10.0-x64" ( call "c:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" amd64 )
  - if "%C%"=="msvc-11.0-x86" ( call "c:\Program Files (x86)\Microsoft Visual Studio 11.0\VC\vcvarsall.bat" x86 )
  - if "%C%"=="msvc-11.0-x64" ( call "c:\Program Files (x86)\Microsoft Visual Studio 11.0\VC\vcvarsall.bat" amd64 )
  - if "%C%"=="msvc-12.0-x86" ( call "c:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86 )
  - if "%C%"=="msvc-12.0-x64" ( call "c:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" amd64 )
  - if "%C%"=="msvc-14.0-x86" ( call "c:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86 )
  - if "%C%"=="msvc-14.0-x64" ( call "c:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64 )
  - if "%C%"=="msvc-15.0-x86" ( call "c:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" x86 )
  - if "%C%"=="msvc-15.0-x64" ( call "c:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" amd64 )

build_script:
  - cd c:\projects\upx
  - if "%C%"=="gcc-4.9-m32" set PATH=c:\cygwin\bin;%PATH%
  - if "%C%"=="gcc-4.9-m32" bash -x ./.github/travis_build.sh
  - if "%C%"=="gcc-4.9-m32" exit
  - if "%C%"=="gcc-4.9-m64" set PATH=c:\cygwin\bin;%PATH%
  - if "%C%"=="gcc-4.9-m64" bash -x ./.github/travis_build.sh
  - if "%C%"=="gcc-4.9-m64" exit
  # setup directories following the VPATH build in travis_build.sh
  - where cl & where link
  - set BDIR=c:\projects\build\%C%\%B%
  - md %BDIR% %BDIR%\ucl-1.03 %BDIR%\upx %BDIR%\upx-testsuite %BDIR%\zlib-1.2.8
  - set DEFS=-D_CRT_SECURE_NO_WARNINGS
  - git rev-parse --short=12 HEAD > %BDIR%\upx\.GITREV.txt
  # build UCL
  - cd %BDIR%\ucl-1.03
  - set s=c:\projects\deps\ucl-1.03
  - cl -MT -Z7 -W4 %DEFS% -I%s%\include -I%s% -c %s%\src\*.c
  - link -lib -out:ucl.lib *.obj
  # build zlib
  - cd %BDIR%\zlib-1.2.8
  - cl -MT -Z7 -W2 %DEFS% -c c:\projects\deps\zlib-1.2.8\*.c
  - link -lib -out:zlib.lib *.obj
  # build UPX
  - cd %BDIR%\upx
  - set s=c:\projects\upx\src
  - cat .GITREV.txt
  - set /p GITREV=<.GITREV.txt
  - cl -MT -EHsc -J -Z7 -W4 -WX -DUPX_VERSION_GITREV="""%GITREV%""" %DEFS% -DWITH_LZMA=0x443 -DUCL_NO_ASM -I%s%\lzma-sdk -Ic:\projects\deps\ucl-1.03\include -Ic:\projects\deps\zlib-1.2.8 -Feupx.exe %s%\*.cpp %BDIR%\ucl-1.03\ucl.lib %BDIR%\zlib-1.2.8\zlib.lib
  - ls

artifacts:
  # pushing entire folder as a zip archive
  - path: debug

# vim:set ts=2 sw=2 et:
